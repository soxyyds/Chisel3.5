circuit PipeCtrl :
  module PipeCtrl :
    input clock : Clock
    input reset : UInt<1>
    output io : { flip DatHzdBlkP0 : UInt<1>, flip DatHzdBlkP1 : UInt<1>, flip MultiMemBlk0 : UInt<1>, flip MultiMemBlk1 : UInt<1>, flip ImissVld : UInt<1>, flip DmissVld : UInt<1>, flip IoBlk : UInt<1>, flip BufStl : UInt<1>, flip BjEn0 : UInt<1>, flip PreTaken0 : UInt<1>, flip BjTypeVld0 : UInt<1>, flip BjEn1 : UInt<1>, flip PreTaken1 : UInt<1>, flip BjTypeVld1 : UInt<1>, flip RstingBlk : UInt<1>, ExMem1Fls0 : UInt<1>, ExMem1Fls1 : UInt<1>, FeDeStl_MemMem2Stl_Mem2WbStl : UInt<1>, FeStl : UInt<1>, DataBlk0 : UInt<1>, DataBlk1 : UInt<1>, FeDeFls : UInt<1>, DeEXFls : UInt<1>}

    node Blk0 = or(io.DatHzdBlkP0, io.MultiMemBlk0) @[PipeCtrl.scala 39:29]
    node Blk1 = or(io.DatHzdBlkP1, io.MultiMemBlk1) @[PipeCtrl.scala 40:29]
    node _Freeze_T = or(io.ImissVld, io.DmissVld) @[PipeCtrl.scala 41:28]
    node Freeze = or(_Freeze_T, io.IoBlk) @[PipeCtrl.scala 41:43]
    node DeExBlk0 = or(Blk0, Freeze) @[PipeCtrl.scala 42:23]
    node DeExBlk1 = or(Blk1, Freeze) @[PipeCtrl.scala 43:23]
    node _BjEnVld0_T = eq(io.DatHzdBlkP0, UInt<1>("h0")) @[PipeCtrl.scala 44:31]
    node BjEnVld0 = and(io.BjEn0, _BjEnVld0_T) @[PipeCtrl.scala 44:27]
    node _BjEnVld1_T = eq(io.DatHzdBlkP1, UInt<1>("h0")) @[PipeCtrl.scala 45:31]
    node _BjEnVld1_T_1 = and(io.BjEn1, _BjEnVld1_T) @[PipeCtrl.scala 45:27]
    node _BjEnVld1_T_2 = eq(Blk0, UInt<1>("h0")) @[PipeCtrl.scala 45:52]
    node BjEnVld1 = and(_BjEnVld1_T_1, _BjEnVld1_T_2) @[PipeCtrl.scala 45:48]
    node _PreMissP0_T = eq(io.PreTaken0, UInt<1>("h0")) @[PipeCtrl.scala 46:32]
    node _PreMissP0_T_1 = and(BjEnVld0, _PreMissP0_T) @[PipeCtrl.scala 46:28]
    node _PreMissP0_T_2 = eq(BjEnVld0, UInt<1>("h0")) @[PipeCtrl.scala 46:51]
    node _PreMissP0_T_3 = and(_PreMissP0_T_2, io.BjTypeVld0) @[PipeCtrl.scala 46:62]
    node _PreMissP0_T_4 = and(_PreMissP0_T_3, io.PreTaken0) @[PipeCtrl.scala 46:79]
    node PreMissP0 = or(_PreMissP0_T_1, _PreMissP0_T_4) @[PipeCtrl.scala 46:47]
    node _PreMissP1_T = eq(io.PreTaken1, UInt<1>("h0")) @[PipeCtrl.scala 47:32]
    node _PreMissP1_T_1 = and(BjEnVld1, _PreMissP1_T) @[PipeCtrl.scala 47:28]
    node _PreMissP1_T_2 = eq(BjEnVld1, UInt<1>("h0")) @[PipeCtrl.scala 47:51]
    node _PreMissP1_T_3 = and(_PreMissP1_T_2, io.BjTypeVld1) @[PipeCtrl.scala 47:62]
    node _PreMissP1_T_4 = and(_PreMissP1_T_3, io.PreTaken1) @[PipeCtrl.scala 47:79]
    node PreMissP1 = or(_PreMissP1_T_1, _PreMissP1_T_4) @[PipeCtrl.scala 47:47]
    node PreMiss = or(PreMissP0, PreMissP1) @[PipeCtrl.scala 48:27]
    node _io_FeStl_T = or(io.BufStl, Freeze) @[PipeCtrl.scala 52:25]
    io.FeStl <= _io_FeStl_T @[PipeCtrl.scala 52:12]
    io.FeDeStl_MemMem2Stl_Mem2WbStl <= Freeze @[PipeCtrl.scala 53:35]
    node _io_ExMem1Fls0_T = eq(Freeze, UInt<1>("h0")) @[PipeCtrl.scala 54:33]
    node _io_ExMem1Fls0_T_1 = and(DeExBlk0, _io_ExMem1Fls0_T) @[PipeCtrl.scala 54:29]
    io.ExMem1Fls0 <= _io_ExMem1Fls0_T_1 @[PipeCtrl.scala 54:17]
    io.DeEXFls <= PreMiss @[PipeCtrl.scala 55:14]
    node _io_FeDeFls_T = or(PreMiss, io.RstingBlk) @[PipeCtrl.scala 56:25]
    io.FeDeFls <= _io_FeDeFls_T @[PipeCtrl.scala 56:14]
    node _io_ExMem1Fls1_T = or(DeExBlk0, DeExBlk1) @[PipeCtrl.scala 57:30]
    node _io_ExMem1Fls1_T_1 = eq(Freeze, UInt<1>("h0")) @[PipeCtrl.scala 57:47]
    node _io_ExMem1Fls1_T_2 = and(_io_ExMem1Fls1_T, _io_ExMem1Fls1_T_1) @[PipeCtrl.scala 57:43]
    node _io_ExMem1Fls1_T_3 = or(_io_ExMem1Fls1_T_2, PreMissP0) @[PipeCtrl.scala 57:56]
    io.ExMem1Fls1 <= _io_ExMem1Fls1_T_3 @[PipeCtrl.scala 57:17]
    node _io_DataBlk0_T = or(io.DatHzdBlkP0, Freeze) @[PipeCtrl.scala 58:33]
    io.DataBlk0 <= _io_DataBlk0_T @[PipeCtrl.scala 58:15]
    node _io_DataBlk1_T = or(io.DatHzdBlkP1, Freeze) @[PipeCtrl.scala 59:33]
    node _io_DataBlk1_T_1 = or(_io_DataBlk1_T, io.DatHzdBlkP0) @[PipeCtrl.scala 59:43]
    io.DataBlk1 <= _io_DataBlk1_T_1 @[PipeCtrl.scala 59:15]

