circuit CLA_4b :
  module CLA_4b :
    input clock : Clock
    input reset : UInt<1>
    input io_a : UInt<4>
    input io_b : UInt<4>
    input io_c_i : UInt<1>
    output io_cp4 : UInt<1>
    output io_cg4 : UInt<1>
    output io_s : UInt<4>

    node _cp_T = or(io_a, io_b) @[ADDER.scala 65:14]
    node _cg_T = and(io_a, io_b) @[ADDER.scala 66:14]
    node cg = _cg_T @[ADDER.scala 62:16 66:6]
    node _c_1_T = bits(cg, 0, 0) @[ADDER.scala 72:13]
    node cp = _cp_T @[ADDER.scala 61:16 65:6]
    node _c_1_T_1 = bits(cp, 0, 0) @[ADDER.scala 72:31]
    node _c_1_T_2 = and(io_c_i, _c_1_T_1) @[ADDER.scala 72:27]
    node _c_1_T_3 = or(_c_1_T, _c_1_T_2) @[ADDER.scala 72:17]
    node _c_2_T = bits(cg, 1, 1) @[ADDER.scala 73:13]
    node _c_2_T_1 = bits(cp, 1, 1) @[ADDER.scala 73:22]
    node _c_2_T_2 = bits(cg, 0, 0) @[ADDER.scala 73:30]
    node _c_2_T_3 = and(_c_2_T_1, _c_2_T_2) @[ADDER.scala 73:26]
    node _c_2_T_4 = or(_c_2_T, _c_2_T_3) @[ADDER.scala 73:17]
    node _c_2_T_5 = bits(cp, 1, 1) @[ADDER.scala 73:40]
    node _c_2_T_6 = bits(cp, 0, 0) @[ADDER.scala 73:48]
    node _c_2_T_7 = and(_c_2_T_5, _c_2_T_6) @[ADDER.scala 73:44]
    node _c_2_T_8 = and(_c_2_T_7, io_c_i) @[ADDER.scala 73:52]
    node _c_2_T_9 = or(_c_2_T_4, _c_2_T_8) @[ADDER.scala 73:35]
    node _c_3_T = bits(cg, 2, 2) @[ADDER.scala 74:13]
    node _c_3_T_1 = bits(cp, 2, 2) @[ADDER.scala 74:22]
    node _c_3_T_2 = bits(cg, 1, 1) @[ADDER.scala 74:30]
    node _c_3_T_3 = and(_c_3_T_1, _c_3_T_2) @[ADDER.scala 74:26]
    node _c_3_T_4 = or(_c_3_T, _c_3_T_3) @[ADDER.scala 74:17]
    node _c_3_T_5 = bits(cp, 2, 2) @[ADDER.scala 74:40]
    node _c_3_T_6 = bits(cp, 1, 1) @[ADDER.scala 74:48]
    node _c_3_T_7 = and(_c_3_T_5, _c_3_T_6) @[ADDER.scala 74:44]
    node _c_3_T_8 = bits(cg, 0, 0) @[ADDER.scala 74:56]
    node _c_3_T_9 = and(_c_3_T_7, _c_3_T_8) @[ADDER.scala 74:52]
    node _c_3_T_10 = or(_c_3_T_4, _c_3_T_9) @[ADDER.scala 74:35]
    node _c_3_T_11 = bits(cp, 2, 2) @[ADDER.scala 74:66]
    node _c_3_T_12 = bits(cp, 1, 1) @[ADDER.scala 74:74]
    node _c_3_T_13 = and(_c_3_T_11, _c_3_T_12) @[ADDER.scala 74:70]
    node _c_3_T_14 = bits(cp, 0, 0) @[ADDER.scala 74:82]
    node _c_3_T_15 = and(_c_3_T_13, _c_3_T_14) @[ADDER.scala 74:78]
    node _c_3_T_16 = and(_c_3_T_15, io_c_i) @[ADDER.scala 74:86]
    node _c_3_T_17 = or(_c_3_T_10, _c_3_T_16) @[ADDER.scala 74:61]
    node _io_s_T = xor(io_a, io_b) @[ADDER.scala 77:16]
    node c_0 = io_c_i @[ADDER.scala 68:15 71:8]
    node c_1 = _c_1_T_3 @[ADDER.scala 68:15 72:8]
    node io_s_hi = cat(c_0, c_1) @[Cat.scala 33:92]
    node c_2 = _c_2_T_9 @[ADDER.scala 68:15 73:8]
    node _io_s_T_1 = cat(io_s_hi, c_2) @[Cat.scala 33:92]
    node _io_s_T_2 = xor(_io_s_T, _io_s_T_1) @[ADDER.scala 77:23]
    node _io_cp4_T = bits(cp, 3, 3) @[ADDER.scala 80:16]
    node _io_cp4_T_1 = bits(cp, 2, 2) @[ADDER.scala 80:24]
    node _io_cp4_T_2 = and(_io_cp4_T, _io_cp4_T_1) @[ADDER.scala 80:20]
    node _io_cp4_T_3 = bits(cp, 1, 1) @[ADDER.scala 80:32]
    node _io_cp4_T_4 = and(_io_cp4_T_2, _io_cp4_T_3) @[ADDER.scala 80:28]
    node _io_cp4_T_5 = bits(cp, 0, 0) @[ADDER.scala 80:40]
    node _io_cp4_T_6 = and(_io_cp4_T_4, _io_cp4_T_5) @[ADDER.scala 80:36]
    node _io_cg4_T = bits(cg, 3, 3) @[ADDER.scala 81:16]
    node _io_cg4_T_1 = bits(cp, 3, 3) @[ADDER.scala 81:25]
    node _io_cg4_T_2 = bits(cg, 2, 2) @[ADDER.scala 81:33]
    node _io_cg4_T_3 = and(_io_cg4_T_1, _io_cg4_T_2) @[ADDER.scala 81:29]
    node _io_cg4_T_4 = or(_io_cg4_T, _io_cg4_T_3) @[ADDER.scala 81:20]
    node _io_cg4_T_5 = bits(cp, 3, 3) @[ADDER.scala 81:43]
    node _io_cg4_T_6 = bits(cp, 2, 2) @[ADDER.scala 81:51]
    node _io_cg4_T_7 = and(_io_cg4_T_5, _io_cg4_T_6) @[ADDER.scala 81:47]
    node _io_cg4_T_8 = bits(cg, 1, 1) @[ADDER.scala 81:59]
    node _io_cg4_T_9 = and(_io_cg4_T_7, _io_cg4_T_8) @[ADDER.scala 81:55]
    node _io_cg4_T_10 = or(_io_cg4_T_4, _io_cg4_T_9) @[ADDER.scala 81:38]
    node _io_cg4_T_11 = bits(cp, 3, 3) @[ADDER.scala 81:69]
    node _io_cg4_T_12 = bits(cp, 2, 2) @[ADDER.scala 81:77]
    node _io_cg4_T_13 = and(_io_cg4_T_11, _io_cg4_T_12) @[ADDER.scala 81:73]
    node _io_cg4_T_14 = bits(cp, 1, 1) @[ADDER.scala 81:85]
    node _io_cg4_T_15 = and(_io_cg4_T_13, _io_cg4_T_14) @[ADDER.scala 81:81]
    node _io_cg4_T_16 = bits(cg, 0, 0) @[ADDER.scala 81:93]
    node _io_cg4_T_17 = and(_io_cg4_T_15, _io_cg4_T_16) @[ADDER.scala 81:89]
    node _io_cg4_T_18 = or(_io_cg4_T_10, _io_cg4_T_17) @[ADDER.scala 81:64]
    node c_3 = _c_3_T_17 @[ADDER.scala 68:15 74:8]
    io_cp4 <= _io_cp4_T_6 @[ADDER.scala 80:10]
    io_cg4 <= _io_cg4_T_18 @[ADDER.scala 81:10]
    io_s <= _io_s_T_2 @[ADDER.scala 77:8]
